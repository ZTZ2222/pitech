"use client";

import { cn } from "@/lib/utils";
import clsx from "clsx";
import { motion } from "framer-motion";
import Link from "next/link";
import React from "react";
import { useFormStatus } from "react-dom";
import { Link as LinkScroll } from "react-scroll";
import BarLoader from "./Barloader";

interface RequestButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  to: string;
  className?: string;
  setIsOpen?: (isOpen: boolean) => void;
}

export const RequestButton: React.FC<RequestButtonProps> = ({
  to,
  className,
  setIsOpen,
}) => {
  return (
    <motion.div
      whileTap={{ scale: 0.95 }}
      whileHover={{
        scale: 1.1,
        textShadow: "0 0 8px rgb(255 255 255 / 50%)",
        boxShadow: "0 0 8px rgb(0, 0, 255, 0.5)",
      }}
      transition={{ type: "spring", stiffness: 400, damping: 10 }}
      className="w-fit rounded-[30px]"
    >
      <LinkScroll
        to={to}
        smooth={true}
        duration={700}
        onClick={() => setIsOpen && setIsOpen(false)}
        className={cn(
          "group inline-flex max-w-[280px] cursor-pointer gap-2 rounded-[30px] bg-accent px-6 py-3 text-sm font-semibold text-dark-blue transition duration-300 hover:bg-dark-blue hover:text-white md:gap-3 md:px-7 md:py-2.5 md:text-base",
          className,
        )}
      >
        <p className="shrink-0">Get A Free Quote</p>
        {/* <svg
          className="h-5 w-5 fill-dark-blue transition duration-500 group-hover:fill-white"
          viewBox="0 0 28 27"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="M21.2955 7.06577L8.75463 18.8668C8.67181 18.9445 8.56731 18.9952 8.45499 19.0122C8.34267 19.0292 8.22784 19.0117 8.12574 18.9619L0.964809 15.4105C0.718185 15.2872 0.714662 15.1586 0.954241 15.0247L26.8921 0.528449C26.9304 0.506938 26.9742 0.497269 27.018 0.500665C27.0618 0.504061 27.1036 0.52037 27.1381 0.547529C27.1726 0.574687 27.1983 0.611473 27.2119 0.653232C27.2255 0.694992 27.2264 0.739846 27.2145 0.78212L20.7142 24.9919C20.7068 25.0179 20.6939 25.0421 20.6762 25.0626C20.6585 25.0831 20.6366 25.0994 20.6119 25.1105C20.5872 25.1216 20.5603 25.1271 20.5333 25.1267C20.5062 25.1263 20.4796 25.12 20.4552 25.1081L14.1134 21.9108C13.9302 21.8192 13.7840 21.8597 13.6748 22.0324L10.9161 26.4082C10.8938 26.4447 10.8602 26.4726 10.8204 26.4877C10.7806 26.5027 10.7368 26.5040 10.6956 26.4915C10.6543 26.4789 10.6180 26.4532 10.5920 26.4181C10.5660 26.3831 10.5517 26.3406 10.5515 26.2972L10.5885 20.5579C10.5884 20.3396 10.6651 20.1282 10.8051 19.9607L21.4012 7.16089C21.4133 7.14756 21.4196 7.13047 21.4187 7.11307C21.4179 7.09568 21.4099 7.07928 21.3965 7.0672C21.3831 7.05512 21.3652 7.04825 21.3464 7.04798C21.3277 7.04771 21.3095 7.05407 21.2955 7.06577Z" />
        </svg> */}
      </LinkScroll>
    </motion.div>
  );
};

interface AboutCaseButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  href: string;
  className?: string;
}

export const AboutCaseButton: React.FC<AboutCaseButtonProps> = ({
  href,
  className,
}) => {
  return (
    <motion.div
      whileTap={{ scale: 0.95 }}
      whileHover={{
        scale: 1.1,
        textShadow: "0 0 8px rgb(255 255 255 / 50%)",
        boxShadow: "0 0 8px rgb(0, 0, 255, 0.5)",
      }}
      transition={{ type: "spring", stiffness: 400, damping: 10 }}
      className="w-fit rounded-[30px]"
    >
      <Link
        href={href}
        className={cn(
          "group inline-flex max-w-[280px] cursor-pointer gap-2 rounded-[30px] bg-accent px-6 py-3 text-sm font-bold text-dark-blue transition duration-500 hover:bg-dark-blue hover:text-white md:gap-3 md:px-7 md:py-2.5 md:text-base xl:max-w-[300px]",
          className,
        )}
      >
        <p className="shrink-0">View Project</p>
        {/* <svg
          className="h-4 w-4 fill-dark-blue transition duration-500 group-hover:fill-white xl:h-[22px] xl:w-[22px]"
          viewBox="0 0 22 22"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="M20.0122 3.37288C20.0123 3.36594 20.0103 3.35914 20.0064 3.35337C20.0025 3.3476 19.997 3.34313 19.9906 3.34055C19.9841 3.33797 19.977 3.3374 19.9703 3.33891C19.9635 3.34043 19.9573 3.34395 19.9526 3.34903C17.3797 5.92453 14.8051 8.49738 12.2287 11.0676C11.6244 11.6706 10.5641 10.9973 10.7219 10.169C10.7828 9.85361 11.1168 9.56999 11.3593 9.32879C13.7837 6.90702 16.2157 4.47597 18.6551 2.03565C18.6613 2.02944 18.6655 2.0215 18.6673 2.01289C18.669 2.00427 18.6682 1.99537 18.6649 1.98735C18.6616 1.97934 18.656 1.97257 18.6488 1.96795C18.6416 1.96333 18.6332 1.96105 18.6246 1.96143C17.5087 1.97027 16.3858 1.97336 15.2557 1.97071C14.9067 1.96983 14.6576 1.93979 14.5082 1.88059C13.9264 1.64999 13.7952 0.903844 14.2074 0.459868C14.4097 0.241635 14.6991 0.132077 15.0755 0.131194C17.2295 0.129427 19.3889 0.13031 21.5535 0.133844C21.635 0.134193 21.713 0.166699 21.7706 0.224285C21.8282 0.281872 21.8607 0.359875 21.861 0.441314C21.8725 2.59272 21.8721 4.74987 21.8597 6.91276C21.8517 8.45011 19.999 8.31228 20.0135 7.02409C20.0259 5.80039 20.0255 4.58332 20.0122 3.37288Z" />
          <path d="M2.60035 5.71468C2.02914 5.71601 1.92444 6.03408 1.92444 6.55227C1.92268 10.8189 1.92268 15.0846 1.92444 19.3494C1.92444 19.8835 2.18818 20.0505 2.70505 20.0505C7.04673 20.0531 11.3805 20.0536 15.7062 20.0518C15.8567 20.0518 16.001 19.992 16.1073 19.8857C16.2137 19.7793 16.2735 19.635 16.2735 19.4846L16.2761 8.45408C16.2761 8.34717 16.3137 8.25573 16.3888 8.17974L18.0176 6.5483C18.0259 6.53986 18.0366 6.5341 18.0482 6.53176C18.0598 6.52942 18.0719 6.5306 18.0829 6.53516C18.0938 6.53971 18.1032 6.54743 18.1097 6.55732C18.1163 6.56722 18.1197 6.57884 18.1196 6.59071C18.1223 11.0367 18.1227 15.4905 18.1209 19.9524C18.1209 20.5214 18.0556 20.9252 17.9248 21.1637C17.5762 21.8025 17.0024 21.9006 16.2642 21.9006C11.5762 21.9006 6.88858 21.901 2.20143 21.9019C1.57677 21.9019 1.154 21.8533 0.933119 21.7561C0.274444 21.4672 0.0955284 20.904 0.0942031 20.1764C0.0924361 15.2507 0.0915527 10.3254 0.0915527 5.40059C0.0915527 4.75914 0.330107 4.31561 0.807215 4.06998C1.05991 3.93922 1.50477 3.87384 2.14179 3.87384C6.58509 3.87561 11.0218 3.87605 15.4518 3.87517C15.4598 3.87538 15.4676 3.87795 15.4742 3.88256C15.4808 3.88717 15.4859 3.89362 15.4889 3.9011C15.4919 3.90858 15.4926 3.91677 15.4909 3.92464C15.4893 3.93252 15.4853 3.93974 15.4796 3.94541L13.7581 5.65902C13.7292 5.68786 13.6901 5.70406 13.6494 5.70408C9.96416 5.70673 6.28115 5.71027 2.60035 5.71468Z" />
        </svg> */}
      </Link>
    </motion.div>
  );
};

interface FormButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  variants: any;
}

const FormButton: React.FC<FormButtonProps> = ({ variants }) => {
  const { pending } = useFormStatus();
  return (
    <motion.button
      disabled={pending}
      variants={variants}
      whileTap={{ scale: 0.8 }}
      type="submit"
      className={clsx(
        "group flex items-center justify-center gap-2 rounded-[10px] border-[3px] border-solid border-accent px-6 py-3 text-sm font-bold text-accent transition hover:bg-accent md:gap-3 md:px-7 md:py-2.5 md:text-base",
        pending && "cursor-wait",
      )}
    >
      {pending ? (
        <BarLoader />
      ) : (
        <>
          <span className="text-xl font-bold group-hover:text-dark-blue">
            Submit
          </span>
          <svg
            className="h-6 w-7 fill-accent group-hover:fill-dark-blue"
            viewBox="0 0 34 28"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M27.8536 8.37341C27.8536 8.30807 27.8251 8.2911 27.768 8.3225C24.12 10.2901 20.4988 12.2408 16.9044 14.1745C15.5444 14.9063 14.7941 15.0412 13.4699 14.3196C10.8461 12.8924 8.2232 11.4653 5.60115 10.0381C5.24751 9.84553 5.01103 9.65929 4.89173 9.47941C4.51338 8.91177 4.7882 8.14559 5.38896 7.87577C5.82228 7.68104 6.17251 7.80195 6.60582 8.03613C9.36081 9.53201 12.1141 11.03 14.8657 12.5301C15.0498 12.6298 15.2912 12.4999 15.4849 12.3957L15.5048 12.385C19.5789 10.1892 23.667 7.9865 27.7693 5.77704C27.801 5.76016 27.8271 5.73425 27.8441 5.70255C27.8612 5.67085 27.8685 5.63478 27.8651 5.59886C27.8523 5.45586 27.8525 5.30323 27.8526 5.15051C27.8528 4.92263 27.853 4.69455 27.8102 4.49795C27.5937 3.50183 27.062 2.84807 26.215 2.53668C25.8468 2.40177 25.1506 2.33474 24.1263 2.33559C17.8793 2.34238 11.6318 2.3428 5.38385 2.33686C4.80013 2.33686 4.34892 2.39371 4.03022 2.50741C3.25136 2.78571 2.73581 3.2965 2.48357 4.03977C2.36598 4.38765 2.30803 5.06177 2.30974 6.06213C2.31314 8.1791 2.31314 10.2961 2.30974 12.413C2.30888 12.7949 2.25605 13.0791 2.15124 13.2658C1.58243 14.284 0.0715775 13.813 0.0690211 12.632C0.0639082 9.99147 0.0639082 7.35098 0.0690211 4.7105C0.0728557 2.63468 1.69747 0.817226 3.63908 0.28268C4.05493 0.168983 4.63822 0.111287 5.38896 0.10959C16.0084 0.09262 22.6803 0.0917714 25.4046 0.107044C27.552 0.119771 29.3952 1.69032 29.9371 3.71395C30.1173 4.38539 30.1116 5.17489 30.1062 5.921V5.92102L30.1062 5.92198C30.1055 6.01703 30.1049 6.11137 30.1046 6.20468C30.0943 9.30165 30.0939 12.3986 30.1033 15.4956C30.1071 17.1374 27.8498 17.0458 27.8524 15.6241C27.8549 13.1873 27.8553 10.7704 27.8536 8.37341ZM4.03279 21.5627C4.20663 21.634 4.55814 21.7015 4.79589 21.7027C8.08857 21.7138 11.3813 21.7142 14.674 21.704C15.1051 21.7031 15.4221 21.7553 15.6249 21.8605C16.6539 22.3938 16.2334 23.9478 15.051 23.9478C11.6629 23.9487 8.27477 23.9487 4.88664 23.9478C2.46825 23.9465 0.494687 22.1851 0.124004 19.8216C0.0473934 19.3382 0.053432 18.7506 0.0593348 18.1762C0.0616063 17.9552 0.0638577 17.7361 0.0613713 17.5256C0.0554063 17.0157 0.0873617 16.6636 0.157238 16.4693C0.587997 15.2665 2.34043 15.6624 2.32382 16.9885C2.3212 17.2063 2.31377 17.4255 2.30635 17.6441C2.25218 19.2418 2.19899 20.8104 4.03279 21.5627ZM27.7437 20.0747C28.255 20.5914 28.7612 21.1124 29.2622 21.6376C29.3023 21.6792 29.2933 21.7004 29.2354 21.7013C26.2222 21.7148 23.209 21.7161 20.1958 21.7051C19.6973 21.7025 19.3228 21.8018 19.0454 22.1874C18.6377 22.7525 18.8435 23.5633 19.4979 23.8356C19.6845 23.9137 19.996 23.9523 20.4323 23.9514C23.3892 23.9472 26.3453 23.9455 29.3006 23.9464C29.3073 23.9466 29.3139 23.9487 29.3195 23.9525C29.3252 23.9563 29.3295 23.9615 29.3321 23.9677C29.3347 23.9738 29.3354 23.9805 29.3341 23.9869C29.3328 23.9933 29.3296 23.9991 29.3249 24.0036C28.7573 24.5874 28.1932 25.1792 27.6325 25.7791C27.3453 26.0854 27.1728 26.3387 27.1148 26.5389C26.895 27.3076 27.7501 28.0916 28.4915 27.8689C28.7224 27.8002 28.9917 27.6037 29.2993 27.2796C30.4292 26.0909 31.5609 24.9039 32.6942 23.7185C33.3525 23.03 33.2234 22.4802 32.5766 21.8196C31.4441 20.6648 30.3163 19.5054 29.1932 18.3413C28.8481 17.9836 28.5387 17.7787 28.0594 17.8538C27.3781 17.9582 26.9065 18.6544 27.1698 19.3213C27.2448 19.513 27.4361 19.7642 27.7437 20.0747Z"
            />
          </svg>
        </>
      )}
    </motion.button>
  );
};

export default FormButton;
